

build.gradle 에
//	implementation 'org.springframework.boot:spring-boot-starter-security' 의존성 추가

경로 - entity - Users;
    // 유저생성 메서드  // 비밀번호를 해시코드로 가리는
    public static Users createUsers(UsersDTO usersDTO, PasswordEncoder passwordEncoder){
        Users users = new Users();
        users.setUserId(usersDTO.getUserId());
        String password = passwordEncoder.encode(usersDTO.getUserPassword());
        users.setUserPassword(password);
        users.setUserPhone(users.getUserPhone());
        return  users;
    }


    public static Users createUsers(UsersDTO usersDTO){
        Users users = new Users();
        users.setUserId(usersDTO.getUserId());
        users.setUserPassword(usersDTO.getUserPassword());
        users.setUserPhone(users.getUserPhone());
        return  users;
    }

경로 - controller - BoardsController;
    @PostMapping("/save")
    public String save(@ModelAttribute BoardsDTO boardsDTO){
        // save.html이랑 name 과 필드 값이 동일하다면  스프링이 해당하는 필드에 대한 setter를 알아서 호출하면서
        // name에 setter의 값들 setter 메서드로 각각 알아서 담아 준다



경로 - entity - Boards
   // 포린키를 생성시는 꼭 클래스의 객체를 만들어 줘야 한다
    // users 객체가 user_id 칼럼이 되고
    // users 의 user_id  동작이 같이 ...
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id")  // 포린키 설정
    private Users users;





